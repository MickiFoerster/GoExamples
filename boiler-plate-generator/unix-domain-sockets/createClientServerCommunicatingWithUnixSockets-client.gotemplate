#include <sys/types.h>
#include <sys/socket.h>
#include <sys/un.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <unistd.h>
#include <stdlib.h>
#include <stdio.h>
#include <string.h>

#define BUFFERSIZE {{.BufferSize}}
#define UNIX_DOMAIN_SOCKET_FILE "/tmp/sock.uds"

int main (int argc, char **argv) {
  int sock;
  char *buffer = (char*) malloc(BUFFERSIZE);
  struct sockaddr_un address;
  int size;
  printf ("\e[2J");
  if((sock=socket (PF_LOCAL, SOCK_STREAM, 0)) > 0)
    printf ("Socket wurde angelegt\n");
  address.sun_family = AF_LOCAL;
  strcpy(address.sun_path, UNIX_DOMAIN_SOCKET_FILE);
  if (connect ( sock,
                (struct sockaddr *) &address,
                sizeof (address)) == 0)
    printf ("Verbindung mit dem Server hergestellt\n");
  do {
      size = recv(sock, buffer, BUFFERSIZE-1, 0);
      if( size > 0)
         buffer[size] = '\0';
      printf ("Nachricht erhalten: %s\n", buffer);
      if (strcmp (buffer, "quit\n")) {
         printf ("Nachricht zum Versenden: ");
         fgets (buffer, BUFFERSIZE, stdin);
         send(sock, buffer, strlen (buffer), 0);
       }
  } while (strcmp (buffer, "quit\n") != 0);
  close (sock);
  return EXIT_SUCCESS;
}
